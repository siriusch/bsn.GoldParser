<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>9.0.30729</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{68DC267E-76A4-4B7A-A397-95302BB5D64F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>bsn.GoldParser</RootNamespace>
    <AssemblyName>bsn.GoldParser.Test</AssemblyName>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <KeyContainerName>bsn</KeyContainerName>
    <FileUpgradeFlags />
    <OldToolsVersion>3.5</OldToolsVersion>
    <UpgradeBackupLocation />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="xunit, Version=1.9.2.1705, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\xunit.1.9.2\lib\net20\xunit.dll</HintPath>
    </Reference>
    <Reference Include="xunit.extensions">
      <HintPath>..\packages\xunit.extensions.1.9.2\lib\net20\xunit.extensions.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\bsn.GoldParser\bsn.GoldParser.csproj">
      <Project>{1A1A5AE9-7981-471C-9CC7-F7465E675A32}</Project>
      <Name>bsn.GoldParser</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="Grammar\TestGrammar.grm" />
    <None Include="packages.config" />
    <None Include="Semantic\TestUnicode.grm" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Grammar\TestGrammar.cgt" />
    <EmbeddedResource Include="Grammar\TestGrammar.egt" />
    <EmbeddedResource Include="Semantic\TestUnicode.egt" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Grammar\CgtCompiledGrammarTest.cs" />
    <Compile Include="Grammar\CompiledGrammarTestBase.cs" />
    <Compile Include="Grammar\EgtCompiledGrammarTest.cs" />
    <Compile Include="Grammar\GrammarObjectSetTest.cs" />
    <Compile Include="Parser\CgtTokenizerTest.cs" />
    <Compile Include="Parser\EgtTokenizerTest.cs" />
    <Compile Include="Parser\LalrProcessorTest.cs" />
    <Compile Include="Parser\TestStringReader.cs" />
    <Compile Include="Parser\TextBufferTest.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Semantic\AssemblyAttributes.cs" />
    <Compile Include="Semantic\RuleAttributeTest.cs" />
    <Compile Include="Semantic\RuleDeclarationParserTest.cs" />
    <Compile Include="Semantic\RuleTrimAttributeTest.cs" />
    <Compile Include="Semantic\SemanticProcessorTest.cs" />
    <Compile Include="Semantic\SemanticTypeActionsTest.cs" />
    <Compile Include="Semantic\StaticMethodAttribute\DynamicFactory.cs" />
    <Compile Include="Semantic\StaticMethodAttribute\DynamicMockTokenBase.cs" />
    <Compile Include="Semantic\StaticMethodAttribute\GenericStaticFactory.cs" />
    <Compile Include="Semantic\StaticMethodAttribute\MockGenericTokenBase.cs" />
    <Compile Include="Semantic\StaticMethodAttribute\MockTokenBase.cs" />
    <Compile Include="Semantic\StaticMethodAttribute\MockTokenDerived.cs" />
    <Compile Include="Semantic\StaticMethodAttribute\StaticFactory.cs" />
    <Compile Include="Semantic\StaticMethodAttribute\Tests.cs" />
    <Compile Include="Semantic\StrictCtorParameterMatching\MockTokenBase.cs" />
    <Compile Include="Semantic\StrictCtorParameterMatching\MockTokenBaseExplicitChecks.cs" />
    <Compile Include="Semantic\StrictCtorParameterMatching\MockTokenBaseExplicitNoChecks.cs" />
    <Compile Include="Semantic\StrictCtorParameterMatching\ParameterMatching.cs" />
    <Compile Include="Semantic\SymbolTypeMapTest.cs" />
    <Compile Include="Semantic\TerminalAttributeTest.cs" />
    <Compile Include="Semantic\TestAdd.cs" />
    <Compile Include="Semantic\TestConstant.cs" />
    <Compile Include="Semantic\TestDivide.cs" />
    <Compile Include="Semantic\TestEmpty.cs" />
    <Compile Include="Semantic\TestExpression.cs" />
    <Compile Include="Semantic\TestMultiply.cs" />
    <Compile Include="Semantic\TestNegate.cs" />
    <Compile Include="Semantic\TestOperation.cs" />
    <Compile Include="Semantic\TestSpecial.cs" />
    <Compile Include="Semantic\TestSubtract.cs" />
    <Compile Include="Semantic\TestToken.cs" />
    <Compile Include="Semantic\TestUnicode.cs" />
    <Compile Include="Semantic\TestValue.cs" />
    <Compile Include="Xml\TokenXmlReaderTest.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>